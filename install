#!/bin/bash
#
# vim-anywhere - use Vim whenever, wherever
# Author: Chris Knadler
# Homepage: https://www.github.com/cknadler/vim-anywhere
#
# Installs vim-anywhere. Intended for use via curl:
#
#   $ curl -fsSL https://raw.github.com/cknadler/vim-anywhere/master/install | sh

err() { echo "$@" 1>&2; }

aw_path=$HOME/.vim-anywhere
aw_url='https://github.com/cknadler/vim-anywhere'

###
# pre-installation checks
###

# Check if vim-anywhere is already installed. If so, remove the previous
# installation.
if [ -a $aw_path ]; then
  echo 'Cleaning up previous installation...'
  rm -rf $aw_path
  # TODO: It would be nice to have an option for user input here
  # Reinstall vim-anywhere (y/n)? ... or something like that
fi

# If we are on Linux
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  # Ensure gconftool is installed. If not, bail.
  which gconftool &>/dev/null
  if [ $? -ne 0 ]; then
    err 'vim-anywhere requires gconftool to function.'
    exit 1
  fi

  # Ensure gvim is installed. If not, bail.
  which gvim &>/dev/null
  if [ $? -ne 0 ]; then
    err 'vim-anywhere requires gVim to function.'
    exit 1
  fi

  # Ensure xclip is installed. If not, bail.
  which xclip &>/dev/null
  if [ $? -ne 0 ]; then
    err 'vim-anywhere requires xclip to function.'
    exit 1
  fi

# If we are on OSX
elif [[ "$OSTYPE" == "darwin"* ]]; then
  # Ensure homebrew is installed. If not, bail.
  which brew &>/dev/null
  if [ $? -ne 0 ]; then
    err 'vim-anywhere requires Homebrew to function.'
    err 'Visit http://brew.sh for details.'
    exit 1
  fi

  # Ensure MacVim is installed. If not, bail.
  which mvim &>/dev/null
  if [ $? -ne 0 ]; then
    err 'vim-anywhere requires MacVim to function.'
    err 'Run `brew install macvim`.'
    exit 1
  fi
fi

###
# installation
###

echo "Installing vim-anywhere..."

# clone the repo into the current user's home folder
unset $(git rev-parse --local-env-vars)
git clone $aw_url $aw_path
# if the git clone fails (usually due to auth) bail
[ $? -ne 0 ] && exit 1

# If we are on Linux
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  kbd=/desktop/gnome/keybindings/vim-anywhere
  gconftool -t str --set $kbd/name "vim-anywhere"
  gconftool -t str --set $kbd/binding "<CTRL><ALT>v"
  gconftool -t str --set $kbd/action "$aw_path/bin/run"

# If we are on OSX
elif [[ "$OSTYPE" == "darwin"* ]]; then
  # install the workflow as a service
  cp -R $aw_path/VimAnywhere.workflow $HOME/Library/Services

  # TODO: add shortcut
  # It would be great if there was a way to set the keyboard shortcut for
  # vim-anywhere programatically (without GUI scripting). If there ends up being a
  # way to do this, it would go here.

  # As a partial workaround, run a script that opens the shortcut options
  echo "Opening System Preferences..."
  osascript $aw_path/script/open_shortcuts.scpt
fi

echo "vim-anywhere has been successfully installed!"
