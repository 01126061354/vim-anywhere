#!/bin/bash
#
# vim-anywhere - use Vim whenever, wherever
# Author: Chris Knadler
# Homepage: https://www.github.com/cknadler/vim-anywhere
#
# Installs vim-anywhere. Intended for use via curl:
#
#   $ curl -fsSL https://raw.github.com/cknadler/vim-anywhere/master/install | sh

err() { echo "$@" 1>&2; }

aw_path=$HOME/.vim-anywhere
aw_url='https://github.com/cknadler/vim-anywhere'

# Check if vim-anywhere is already installed. If so, bail.
if [ -a $aw_path ]; then
  echo 'Cleaning up previous installation...'
  rm -rf $aw_path
  # TODO: It would be nice to have an option for user input here
  # Reinstall vim-anywhere (y/n)? ... or something like that
fi

# Ensure homebrew is installed. If not, bail.
which brew &>/dev/null
if [ $? -ne 0 ]; then
  err 'vim-anywhere requires homebrew to function.'
  err 'Visit http://brew.sh for details.'
  exit 1
fi

# Ensure mvim is installed. If not, attempt to install it with homebrew.
which mvim &>/dev/null
if [ $? -ne 0 ]; then
  echo 'Installing MacVim via Homebrew...'
  brew install macvim
  # bail if installation fails
  [ $? -ne 0 ] && exit 1
fi

echo "Installing vim-anywhere..."

# clone the repo into the current user's home folder
unset $(git rev-parse --local-env-vars)
git clone $aw_url $aw_path
# if the git clone fails (usually due to auth) bail
[ $? -ne 0 ] && exit 1

# install the workflow as a service
cp -R $aw_path/VimAnywhere.workflow $HOME/Library/Services

# TODO: add shortcut
# It would be great if there was a way to set the keyboard shortcut for
# vim-anywhere programatically (without GUI scripting). If there ends up being a
# way to do this, it would go here. For reference, I have a SO question open
# about this: http://stackoverflow.com/questions/20829985

echo "vim-anywhere has been successfully installed!"
